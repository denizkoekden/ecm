name: Build and Release ECM/UNECM

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup GCC on Windows
        if: runner.os == 'Windows'
        run: |
          gcc --version
        shell: bash

      - name: Compile on Linux
        if: runner.os == 'Linux'
        run: |
          mkdir -p bin
          gcc -o bin/ecm-linux ecm.c
          gcc -o bin/unecm-linux unecm.c
        shell: bash

      - name: Compile on macOS (Universal Binary)
        if: runner.os == 'macOS'
        run: |
          mkdir -p bin
          gcc -arch x86_64 -arch arm64 -o bin/ecm-macos ecm.c
          gcc -arch x86_64 -arch arm64 -o bin/unecm-macos unecm.c
        shell: bash

      - name: Compile on Windows
        if: runner.os == 'Windows'
        run: |
          mkdir -p bin
          gcc -o bin/ecm-windows.exe ecm.c
          gcc -o bin/unecm-windows.exe unecm.c
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ecm-unecm-${{ matrix.os }}
          path: bin/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download all Artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v1.0.0 --title "Release v1.0.0" --notes "Automatically generated release."

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in bin/*; do
            gh release upload v1.0.0 "$file" --clobber
          done
